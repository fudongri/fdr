<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>独孤一条狗 | blog</title>
  <subtitle>java</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://wwww.galigeigei.org/"/>
  <updated>2017-08-12T08:44:50.900Z</updated>
  <id>http://wwww.galigeigei.org/</id>
  
  <author>
    <name>fudongri</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>jvisualvm远程连接tomcat</title>
    <link href="http://wwww.galigeigei.org/jvisualvm%E8%BF%9C%E7%A8%8B%E8%BF%9E%E6%8E%A5tomcat/"/>
    <id>http://wwww.galigeigei.org/jvisualvm远程连接tomcat/</id>
    <published>2017-08-02T14:05:15.000Z</published>
    <updated>2017-08-12T08:44:50.900Z</updated>
    
    <content type="html"><![CDATA[<h4 id="方法1：JMX连接"><a href="#方法1：JMX连接" class="headerlink" title="方法1：JMX连接"></a>方法1：JMX连接</h4><ul>
<li>在tomcat的catalina.sh文件中加入<figure class="highlight shell"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">JAVA_OPTS="-Dcom.sun.management.jmxremote.port=7070 -Dcom.sun.management.jmxremote.ssl=false</div><div class="line"> -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=192.168.1.101"</div></pre></td></tr></table></figure>
</li>
</ul>
<a id="more"></a>
<blockquote>
<p> <strong>说明：</strong><br>-Dcom.sun.management.jmxremote.port 远程连接端口<br>-Dcom.sun.management.jmxremote.ssl=false  是否启用ssl<br>-Dcom.sun.management.jmxremote.authenticate=false   是否需要用户名密码认证<br>-Djava.rmi.server.hostname  服务器的ip</p>
</blockquote>
<ul>
<li><p>开放端口<br>这里有个坑，不仅需要开放配置的远程的连接的端口，JMXserver还会监听几个随机端口。。不废话，看操作<br><code>netstat -tupln | grep 7070</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div></pre></td><td class="code"><pre><div class="line">tcp        0      0 :::7070                     :::*                        LISTEN      3110/java</div></pre></td></tr></table></figure>
<p><code>lsof -i | grep 3110</code></p>
<figure class="highlight plain"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div></pre></td><td class="code"><pre><div class="line">java      3110    root   19u  IPv6  37695      0t0  TCP *:60865 (LISTEN)</div><div class="line">java      3110    root   20u  IPv6  37696      0t0  TCP *:arcp (LISTEN)</div><div class="line">java      3110    root   22u  IPv6  37703      0t0  TCP *:57146 (LISTEN)</div><div class="line">java      3110    root   52u  IPv6  37704      0t0  TCP *:webcache (LISTEN)</div><div class="line">java      3110    root   56u  IPv6  37706      0t0  TCP *:8009 (LISTEN)</div><div class="line">java      3110    root   78u  IPv6  37717      0t0  TCP localhost:mxi (LISTEN)</div></pre></td></tr></table></figure>
</li>
</ul>
<blockquote>
<p>我们需要把这些端口在防火墙中全部开放，然而每次重启tomcat这些端口又全变了，然后你懂的。。当然你可以选择直接关闭防火墙，后果自负。。</p>
</blockquote>
<ul>
<li>客户端连接<br>最后就可以在我们本地JAVA HOME的bin目录打开jvisualvm.exe选择<code>文件--&gt;添加JMX连接</code>，输入ip端口连接就行了</li>
</ul>
<h4 id="方法2：jstatd连接"><a href="#方法2：jstatd连接" class="headerlink" title="方法2：jstatd连接"></a>方法2：jstatd连接</h4><p>先睡觉。。。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;方法1：JMX连接&quot;&gt;&lt;a href=&quot;#方法1：JMX连接&quot; class=&quot;headerlink&quot; title=&quot;方法1：JMX连接&quot;&gt;&lt;/a&gt;方法1：JMX连接&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;在tomcat的catalina.sh文件中加入&lt;figure class=&quot;highlight shell&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;1&lt;/div&gt;&lt;div class=&quot;line&quot;&gt;2&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;div class=&quot;line&quot;&gt;JAVA_OPTS=&quot;-Dcom.sun.management.jmxremote.port=7070 -Dcom.sun.management.jmxremote.ssl=false&lt;/div&gt;&lt;div class=&quot;line&quot;&gt; -Dcom.sun.management.jmxremote.authenticate=false -Djava.rmi.server.hostname=192.168.1.101&quot;&lt;/div&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="JVM" scheme="http://wwww.galigeigei.org/categories/JVM/"/>
    
    
      <category term="jvisualVM" scheme="http://wwww.galigeigei.org/tags/jvisualVM/"/>
    
      <category term="tomcat" scheme="http://wwww.galigeigei.org/tags/tomcat/"/>
    
  </entry>
  
  <entry>
    <title>CentOS6.x  mysql5.7实现主从同步</title>
    <link href="http://wwww.galigeigei.org/CentOS6.x%20%20mysql5.7%E5%AE%9E%E7%8E%B0%E4%B8%BB%E4%BB%8E%E5%90%8C%E6%AD%A5/"/>
    <id>http://wwww.galigeigei.org/CentOS6.x  mysql5.7实现主从同步/</id>
    <published>2017-07-21T15:42:23.000Z</published>
    <updated>2017-08-12T08:45:03.290Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-环境准备"><a href="#1-环境准备" class="headerlink" title="1.环境准备"></a>1.环境准备</h4><ul>
<li>一台Master服务器 192.168.1.101</li>
<li>一台Slave服务器（多个从节点同理）　192.168.1.102<br> <a href="https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html" target="_blank" rel="external">Mysql官方文档</a></li>
</ul>
<a id="more"></a>
<h4 id="2-配置Master"><a href="#2-配置Master" class="headerlink" title="2.配置Master"></a>2.配置Master</h4><ul>
<li><p>开启二进制日志，配置server_id<br><code>vim /etc/my.cnf</code><br>在[mysqld]下增加如下配置，并<strong>重启myql</strong>服务，重启完成之后，我们可以通过<code>show variables like &#39;%log_bin%&#39;;</code>查看二进制日志的ON/OFF状态</p>
<figure class="highlight profile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">log-bin=mysqlbin-log</div><div class="line">server_id=<span class="number">101</span> #server_id唯一即可，一般取ip尾号</div></pre></td></tr></table></figure>
</li>
<li><p>连接mysql，创建slave用户，授予replication slave权限即可<br><code>grant replication slave on *.* to &#39;relica&#39;@&#39;192.168.1.%&#39; identified by &#39;123456&#39;;</code></p>
</li>
<li>查看当前正在使用的二进制日志<br><code>show master status\G;</code><br>我这里得到：<br>File: <strong>mysql-bin.000002</strong><br>Position: <strong>154</strong><br>Binlog_Do_DB:<br>Binlog_Ignore_DB:<br>Executed_Gtid_Set: </li>
</ul>
<h4 id="3-配置Slave"><a href="#3-配置Slave" class="headerlink" title="3.配置Slave"></a>3.配置Slave</h4><ul>
<li><p>配置server_id<br><code>vim /etc/my.cnf</code><br>在[mysqld]下增加如下配置，并<strong>重启myql</strong>服务</p>
<figure class="highlight profile"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div></pre></td><td class="code"><pre><div class="line">#如果slave下面还有slave，这里也可以设置log-bin</div><div class="line">server_id=<span class="number">102</span></div></pre></td></tr></table></figure>
</li>
<li><p>连接mysql，设置slave参数，并start slave<br><code>change master to master_host=&#39;192.168.1.101&#39;,master_user=&#39;relica&#39;,master_password=&#39;123456&#39;,master_log_file=&#39;mysql-bin.000002&#39;, master_log_pos=154;</code><br><code>start slave;</code></p>
</li>
<li><p>查看Slave状态<br><code>show slave status \G;</code><br>如果看到<strong>Slave_IO_Running: Yes</strong>以及<strong>Slave_SQL_Running: Yes</strong>说明slave已经开始跑了。</p>
</li>
</ul>
<blockquote>
<p>注意事项：</p>
<ul>
<li>如果需要重新修改slave的参数，需要先执行<code>stop slave;</code></li>
<li>因为我是通过克隆虚拟机跑的mysql，Slave_IO_Running一直为NO,通过<code>show slave status</code>分析得知是因为两台机器mysql安装目录下auto.cnf中的server-uuid相同导致，因此只需要在其中一台服务器的mysql安装目录执行<code>mv auto.cnf auto.cnf.bak</code>再重启mysql即可，它会自动生成新的uuid。</li>
<li>也正是因为我的mysql是本地通过虚拟机克隆产生的，所以不需要考虑将Master的数据和Slave的数据保持一致的问题，而这一步在实际环境中很重要。</li>
</ul>
</blockquote>
<h4 id="4-测试"><a href="#4-测试" class="headerlink" title="4.测试"></a>4.测试</h4><p>比如，在<strong>Mater</strong>中执行<br><figure class="highlight sql"><table><tr><td class="gutter"><pre><div class="line">1</div><div class="line">2</div><div class="line">3</div><div class="line">4</div><div class="line">5</div><div class="line">6</div><div class="line">7</div><div class="line">8</div><div class="line">9</div></pre></td><td class="code"><pre><div class="line"><span class="keyword">create</span> <span class="keyword">database</span> <span class="keyword">test</span>;</div><div class="line"><span class="keyword">use</span> <span class="keyword">test</span>;</div><div class="line"><span class="keyword">CREATE</span> <span class="keyword">TABLE</span> <span class="string">`user`</span> (</div><div class="line">  <span class="string">`id`</span> <span class="built_in">int</span>(<span class="number">11</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span> AUTO_INCREMENT,</div><div class="line">  <span class="string">`name`</span> <span class="built_in">varchar</span>(<span class="number">50</span>) <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  <span class="string">`age`</span> tinyint(<span class="number">3</span>) <span class="keyword">unsigned</span> <span class="keyword">NOT</span> <span class="literal">NULL</span>,</div><div class="line">  PRIMARY <span class="keyword">KEY</span> (<span class="string">`id`</span>)</div><div class="line">) <span class="keyword">ENGINE</span>=<span class="keyword">InnoDB</span> <span class="keyword">DEFAULT</span> <span class="keyword">CHARSET</span>=utf8;</div><div class="line"><span class="keyword">INSERT</span> <span class="keyword">INTO</span> <span class="keyword">user</span>(<span class="keyword">name</span>,age) <span class="keyword">VALUES</span>(<span class="string">'a'</span>,<span class="number">20</span>);</div></pre></td></tr></table></figure></p>
<p>可以发现，Slave中数据已经进行了同步。</p>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-环境准备&quot;&gt;&lt;a href=&quot;#1-环境准备&quot; class=&quot;headerlink&quot; title=&quot;1.环境准备&quot;&gt;&lt;/a&gt;1.环境准备&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;一台Master服务器 192.168.1.101&lt;/li&gt;
&lt;li&gt;一台Slave服务器（多个从节点同理）　192.168.1.102&lt;br&gt; &lt;a href=&quot;https://dev.mysql.com/doc/refman/5.7/en/replication-configuration.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;Mysql官方文档&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://wwww.galigeigei.org/categories/mysql/"/>
    
    
      <category term="CentOS" scheme="http://wwww.galigeigei.org/tags/CentOS/"/>
    
      <category term="Mysql" scheme="http://wwww.galigeigei.org/tags/Mysql/"/>
    
  </entry>
  
  <entry>
    <title>CentOS6.x yum安装mysql5.7</title>
    <link href="http://wwww.galigeigei.org/CentOS6.x%20yum%E5%AE%89%E8%A3%85mysql5.7/"/>
    <id>http://wwww.galigeigei.org/CentOS6.x yum安装mysql5.7/</id>
    <published>2017-07-20T15:42:23.000Z</published>
    <updated>2017-08-12T08:44:58.173Z</updated>
    
    <content type="html"><![CDATA[<h4 id="1-安装yum源"><a href="#1-安装yum源" class="headerlink" title="1.安装yum源"></a>1.安装yum源</h4><ul>
<li><p>下载yum源的rpm包<br><code>wget --no-check-certificate https://dev.mysql.com/get/mysql57-community-release-el6-11.noarch.rpm</code></p>
</li>
<li><p>安装rpm包<br><code>yum localinstall -y mysql57-community-release-el6-11.noarch.rpm</code></p>
</li>
</ul>
<a id="more"></a>
<h4 id="2-安装mysql"><a href="#2-安装mysql" class="headerlink" title="2.安装mysql"></a>2.安装mysql</h4><ul>
<li>安装mysql<br><code>yum install -y mysql-community-server</code></li>
<li>开启mysql服务<br><code>service mysqld start</code></li>
<li>查看mysql生成的临时登录密码<br><code>grep &#39;temporary password&#39; /var/log/mysqld.log</code></li>
<li>使用临时密码登录<br><code>mysql -uroot -p</code></li>
<li>修改root’@’localhost的登录密码<br><code>ALTER USER &#39;root&#39;@&#39;localhost&#39; IDENTIFIED BY &#39;123456&#39;;</code></li>
</ul>
<h4 id="3-开启远程连接"><a href="#3-开启远程连接" class="headerlink" title="3.开启远程连接"></a>3.开启远程连接</h4><ul>
<li><p>开放3306端口，重启iptables<br><code>vi /etc/sysconfig/iptables</code><br><code>service iptables restart</code></p>
</li>
<li><p>本地连接mysql将mysql.user表中root用户的host值改为“%”<br><code>use mysql;</code><br><code>update user set host=&#39;%&#39; where user=&#39;root&#39;;</code><br><code>flush privileges;</code></p>
<blockquote>
<p> <strong>说明：</strong>mysql.user表中host列指定了允许用户登录所使用的IP，<strong>%</strong>是通配符。<br> user=’root’&amp;host=’192.168.1.1’，表示root用户只能通过IP地址为<strong>192.168.1.1</strong>的客户端连接mysql。<br> user=’root’&amp;host=’192.168.1.%’，表示root用户可以通过IP地址以<strong>192.168.1.</strong>开头的客户端连接mysql。<br> user=’root’&amp;host=’%’，表示所有IP都有连接权限。因此在开启远程连接时，为了省事可以把host更新为<strong>%</strong>。</p>
</blockquote>
</li>
</ul>
]]></content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;1-安装yum源&quot;&gt;&lt;a href=&quot;#1-安装yum源&quot; class=&quot;headerlink&quot; title=&quot;1.安装yum源&quot;&gt;&lt;/a&gt;1.安装yum源&lt;/h4&gt;&lt;ul&gt;
&lt;li&gt;&lt;p&gt;下载yum源的rpm包&lt;br&gt;&lt;code&gt;wget --no-check-certificate https://dev.mysql.com/get/mysql57-community-release-el6-11.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;安装rpm包&lt;br&gt;&lt;code&gt;yum localinstall -y mysql57-community-release-el6-11.noarch.rpm&lt;/code&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ul&gt;
    
    </summary>
    
      <category term="mysql" scheme="http://wwww.galigeigei.org/categories/mysql/"/>
    
    
      <category term="CentOS" scheme="http://wwww.galigeigei.org/tags/CentOS/"/>
    
      <category term="Mysql" scheme="http://wwww.galigeigei.org/tags/Mysql/"/>
    
  </entry>
  
</feed>
